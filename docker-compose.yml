version: '3.5'
services:
  visualizer:
    image: dockersamples/visualizer
    ports:
      - "8080:8080"
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock

  # Eventstore
  eventstore:
    image: eventstore/eventstore
    ports:
      - "2113:2113"
    networks:
      - estore
  # End Event

  # API Gateway
  traefik: 
    image: traefik 
    command: -c /dev/null --api --docker --docker.swarmmode 
    ports: 
      - "80:80" 
      - "8081:8080" 
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock 
    networks: 
      - api
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s  
  # End API Gateway

  # Start Container
  container:
    build: ./ContainerService
    image: giethoorninternationalharbor/containerservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=containerservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - container
      - broker
  # End container

  # Start customer
  customer:
    build: ./CustomerService
    image: giethoorninternationalharbor/customerservice
    environment:
      - DB_CONNECTION_STRING=mongodb://mongo-giethoorn:27017/customers
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - mongo-giethoorn
      - rabbitmq
    deploy:
      labels: 
      - "traefik.port=3000" 
      - "traefik.backend=customer" 
      - "traefik.frontend.rule=PathPrefix: /api/customer" 
      - "traefik.docker.network=api"
    networks: 
      - api
      - customer
      - broker
  # End customer

  # Start Dock
  dock:
    build: ./DockService
    image: giethoorninternationalharbor/dockservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=dockservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - dock
      - broker
  # End Dock

  # Start Electricity
  electricity:
    build: ./ElectricityService
    image: giethoorninternationalharbor/electricityservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=electricityservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - electricity
      - broker
  # End Electricity

  # Start Invoice
  invoice:
    build: ./InvoiceService
    image: giethoorninternationalharbor/invoiceservice
    environment:
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
      - EVENT_STORE_URL=tcp://admin:changeit@eventstore:1113
    deploy:
      labels: 
      - "traefik.port=5000" 
      - "traefik.backend=invoice" 
      - "traefik.frontend.rule=PathPrefix: /api/invoice" 
      - "traefik.docker.network=api"
    depends_on:
      - sql-giethoorn
      - rabbitmq
      - eventstore
    networks:
      - api
      - invoice
      - broker
      - estore
  # End Invoice

  # Start Refuel
  refuel:
    build: ./RefuelService
    image: giethoorninternationalharbor/refuelservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=refuelservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - refuel
      - broker
  # End Refuel

  # Start Rental
  rental:
    build: ./RentalService
    image: giethoorninternationalharbor/rentalservice
    environment:
      - DB_CONNECTION_STRING=mongodb://mongo-giethoorn:27017/rentals
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - mongo-giethoorn
      - rabbitmq
    deploy:
      labels: 
      - "traefik.port=3000" 
      - "traefik.backend=rental" 
      - "traefik.frontend.rule=PathPrefix: /api/rental" 
      - "traefik.docker.network=api"
    networks: 
      - rental
      - broker
      - api
  # End Rental

  # Start Security
  security:
    build: ./SecurityService
    image: giethoorninternationalharbor/securityservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=securityservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - security
      - broker
  # End Security

  # Start ShipManagement
  shipmanagement:
    build: ./ShipManagementService
    image: giethoorninternationalharbor/shipmanagementservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=shipmanagementservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - shipmanagement
      - broker
  # End ShipManagement

  # Start ShipServiceManagement
  shipservicemanagement:
    build: ./ShipServiceManagementService
    image: giethoorninternationalharbor/shipservicemanagementservice
    environment:
      - DB_CONNECTION_STRING=Server=sql-giethoorn;Database=shipservicemanagementservice;User Id=sa;Password=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF;
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    deploy:
      labels: 
      - "traefik.port=5000" 
      - "traefik.backend=shipservicemanagement" 
      - "traefik.frontend.rule=PathPrefix: /api/shipservice" 
      - "traefik.docker.network=api"
    depends_on:
      - sql-giethoorn
      - rabbitmq
    networks:
      - shipservicemanagement
      - broker
      - api
  # End ShipServiceManagement

  # Start Transportation
  transportation:
    build: ./TransportationService
    image: giethoorninternationalharbor/transportationservice
    environment:
      - DB_CONNECTION_STRING=mongodb://mongo-giethoorn:27017/transportations
      - AMQP_URL=amqp://service:wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI@rabbitmq:5672
    deploy:
      labels: 
      - "traefik.port=3000" 
      - "traefik.backend=transportation" 
      - "traefik.frontend.rule=PathPrefix: /api/truck" 
      - "traefik.docker.network=api"
    depends_on:
      - mongo-giethoorn
      - rabbitmq
    networks: 
      - transportation
      - broker
      - api
  # End Transportation

  # Start Mongo Databases
  mongo-giethoorn:
    image: mongo
    volumes:
      - mongo-db-data:/data/db
    networks: 
      - transportation
      - rental
      - customer
  # End Mongo Databases

  # Start SQL Database
  sql-giethoorn:
    image: microsoft/mssql-server-linux:2017-latest
    volumes:
      - sql-db-data:/var/opt/mssql
    environment: 
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Hk3444ZUL70TvUPEBvdFTDJrqSwC7Tij6v4awxJ6L29pDQPOLCYZG2u9pkhwsuUF
    networks: 
      - shipservicemanagement
      - shipmanagement
      - security
      - refuel
      - invoice
      - electricity
      - dock
      - container
  # End SQL Database

  # Rabbit MQ
  rabbitmq:
    image: rabbitmq:3.7-management-alpine
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=service
      - RABBITMQ_DEFAULT_PASS=wcA74WKW4TX0cUdtlK1O3rJrzOy9rPzYp6mKnL3OFQLQK78jLOxXM1QVs5pSCudI 
    networks:
      - broker

networks:
  api:
    driver: overlay
  broker:
    driver: overlay
  container:
    driver: overlay
  customer:
    driver: overlay    
  dock:
    driver: overlay    
  electricity:
    driver: overlay
  invoice:
    driver: overlay
  refuel:
    driver: overlay
  rental:
    driver: overlay
  security:
    driver: overlay
  shipmanagement:
    driver: overlay
  shipservicemanagement:
    driver: overlay
  transportation:
    driver: overlay
  estore:
    driver: overlay

volumes:
  mongo-db-data:
  sql-db-data:
